version: '3.8'

services:
  db:
    image: postgres:12
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - /home/axelor/axelor-db/pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - axelor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  axelor-app:
    image: kapsiki/kapsiki-axelor:latest
    restart: always
    container_name: axelor-app
    depends_on:
      - db
    environment:
      AXELOR_CONFIG_DB_DEFAULT_URL: ${AXELOR_CONFIG_DB_DEFAULT_URL}
      AXELOR_CONFIG_DB_DEFAULT_USER: ${AXELOR_CONFIG_DB_DEFAULT_USER}
      AXELOR_CONFIG_DB_DEFAULT_PASSWORD: ${AXELOR_CONFIG_DB_DEFAULT_PASSWORD}
    ports:
      - "8080:8080"
      - "8443:8443"
    networks:
      - axelor-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.21-alpine  
    container_name: axelor-nginx
    ports:
      - "80:80"    
      - "443:443"  
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  
      - /home/axelor/axelor-certs:/etc/nginx/certs  
      - /home/axelor/axelor-keys:/etc/nginx/keys    
    depends_on:
      - axelor-app
    networks:
      - axelor-network

networks:
  axelor-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.10.1.0/24
